[
    {
        "title": "Control flow or Jump Statements",
        "description": "Jump statements are used to transfer the control of the program to the specific statements. In other words, jump statements transfer the execution control to the other part of the program. There are two types of jump statements in Java, i.e., break and continue. As the name suggests, the break statement is used to break the current flow of the program and transfer the control to the next statement outside a loop or switch statement. However, it breaks only the inner loop in the case of the nested loop. The break statement cannot be used independently in the Java program, i.e., it can only be written inside the loop or switch statement.",
        "documentation": {
            "href": "/learning/CoreJava/ControlFlowOrJumpStatements.html",
            "target": "_blank"
        },
        "github_examples": {
            "href": "https://github.com/MannemLokesh/CoreJava/tree/master/ControlFlowOrJumpStatements/src/com/lokesh",
            "target": "_blank"
        }
    },
    {
        "title": "Methods in Java",
        "description": "A method is a block of code which only runs when it is called. You can pass data, known as parameters, into a method. Methods are used to perform certain actions, and they are also known as functions. Why use methods? To reuse code: define the code once, and use it many times. Methods can be classified into two types. 1. User Defined Methods: These Methods are created by us depends upon the usage. 2. Pre Defined Methods: These Methods are nothing but built in Methods. These Methods are already in the JDK. So that we will use it directly.",
        "documentation": {
            "href": "/learning/CoreJava/MethodsInJava.html",
            "target": "_blank"
        },
        "github_examples": {
            "href": "#",
            "target": null
        }
    }
]
